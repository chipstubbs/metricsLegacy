#!/bin/bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

echo "REMOTE:$remote"
echo "URL:$url"
echo "CURRENT BRANCH:$current_branch"
while read local_ref local_sha remote_ref remote_sha
do
        #echo $remote_ref
        #echo $local_ref
        if [[ $remote = origin && $current_branch = master ]];
        then
                echo "***Pushing to production master"
                git push production master
        elif [[ $remote = origin && $current_branch = staging ]];
        then
                echo "***Pushing to production staging"
                git push production staging
        fi
done

exit 0